# spotify_web_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module SpotifyWebApi
  # SavedAudiobookObject Model.
  class SavedAudiobookObject < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The date and time the audiobook was saved
    # Timestamps are returned in ISO 8601 format as Coordinated Universal Time
    # (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ.
    # If the time is imprecise (for example, the date/time of an album release),
    # an additional field indicates the precision; see for example, release_date
    # in an album object.
    # @return [DateTime]
    attr_accessor :added_at

    # Information about the audiobook.
    # @return [AudiobookObject]
    attr_accessor :audiobook

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['added_at'] = 'added_at'
      @_hash['audiobook'] = 'audiobook'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        added_at
        audiobook
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(added_at = SKIP, audiobook = SKIP)
      @added_at = added_at unless added_at == SKIP
      @audiobook = audiobook unless audiobook == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      added_at = if hash.key?('added_at')
                   (DateTimeHelper.from_rfc3339(hash['added_at']) if hash['added_at'])
                 else
                   SKIP
                 end
      audiobook = AudiobookObject.from_hash(hash['audiobook']) if hash['audiobook']

      # Create object from extracted values.
      SavedAudiobookObject.new(added_at,
                               audiobook)
    end

    def to_custom_added_at
      DateTimeHelper.to_rfc3339(added_at)
    end
  end
end
